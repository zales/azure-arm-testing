name: armTemplateDeployment

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  resource_group_name: rg-githubactions
  subscriptionId: 6fbf6081-bf6f-4419-93b2-b19e973cc345
  location: westeurope
  vaultName: "zales-keyvault-skoleni"

jobs:
  armDeploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Azure Login
        uses: Azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Deploy Resource Group ${{ env.resource_group_name }}
        uses: Azure/arm-deploy@v1
        with:
          scope: subscription
          subscriptionId: ${{ env.subscriptionId }}
          region: "${{ env.location }}"
          template: ./arm-templates/resourcegroup.json
          parameters:
            location="${{ env.location }}"
            resourceGroupName=${{ env.resource_group_name }}
          deploymentName: ${{ env.resource_group_name }}

      - name: Deploy storage account
        uses: Azure/arm-deploy@v1
        id: storageAccountDeploy
        with:
          scope: resourcegroup
          resourceGroupName: ${{ env.resource_group_name }}
          subscriptionId: ${{ env.subscriptionId }}
          template: ./arm-templates/storageaccount.json
          parameters: ./arm-templates/storageaccount.parameters.json
          deploymentMode: incremental
          
      - name: Deploy VM
        uses: Azure/arm-deploy@v1
        with:
          scope: resourcegroup
          resourceGroupName: ${{ env.resource_group_name }}
          subscriptionId: ${{ env.subscriptionId }}
          template: ./arm-templates/virtualmachine.json
          parameters: 
            adminPassword=${{ secrets.ADMIN_PASSWORD }}
          deploymentMode: incremental

      - name: Deploy Key Vault
        uses: Azure/cli@1.0.4
        with:
          inlinescript: |
            echo "==> Create or update Key Vault..."
            printenv
            KV_EXISTS=$(
                az keyvault list \
                    --query "[?name=='${{ env.vaultName }}'].name" \
                    --out tsv
            )
            if [ -z "$KV_EXISTS" ]; then
                az keyvault create \
                    --resource-group "${{ env.resource_group_name }}" \
                    --name "${{ env.vaultName }}" \
                    --location " ${{ env.location }}" \
                    --query 'properties.provisioningState' \
                    --out tsv
            else
                echo "The specified vault: $${{ env.vaultName }} already exists (skipping)"
            fi

      - name: Set secret
        uses: Azure/cli@1.0.4
        with:
          inlinescript: |
            az keyvault secret set -n "ADMINPASSWORD" --vault-name ${{ env.vaultName }} --value ${{ secrets.ADMIN_PASSWORD }}

      - name: Azure key vault - Get Secrets
        uses: Azure/get-keyvault-secrets@v1
        with:
          keyvault: ${{ env.vaultName }}
          secrets: 'ADMINPASSWORD'
        id: getAzureKeyVaultSecrets

      - run: echo ${{ steps.getAzureKeyvaultSecrets.outputs.ADMINPASSWORD}}
